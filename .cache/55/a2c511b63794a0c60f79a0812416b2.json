{"id":"RDEA","dependencies":[{"name":"/Users/ellenwang/Desktop/Ellen practice/Projects/Node projects/Projects/kimchi daddy/package.json","includedInParent":true,"mtime":1627058517687},{"name":"/Users/ellenwang/Desktop/Ellen practice/Projects/Node projects/Projects/kimchi daddy/node_modules/@babel/types/package.json","includedInParent":true,"mtime":1625695188564},{"name":"../validators/generated","loc":{"line":8,"column":25},"parent":"/Users/ellenwang/Desktop/Ellen practice/Projects/Node projects/Projects/kimchi daddy/node_modules/@babel/types/lib/converters/toExpression.js","resolved":"/Users/ellenwang/Desktop/Ellen practice/Projects/Node projects/Projects/kimchi daddy/node_modules/@babel/types/lib/validators/generated/index.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=require(\"../validators/generated\"),s=r;function r(s){if((0,e.isExpressionStatement)(s)&&(s=s.expression),(0,e.isExpression)(s))return s;if((0,e.isClass)(s)?s.type=\"ClassExpression\":(0,e.isFunction)(s)&&(s.type=\"FunctionExpression\"),!(0,e.isExpression)(s))throw new Error(\"cannot turn \".concat(s.type,\" to an expression\"));return s}exports.default=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"Object","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"defineProperty","original":{"line":3,"column":7},"generated":{"line":1,"column":20}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"exports","original":{"line":3,"column":22},"generated":{"line":1,"column":35}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":3,"column":31},"generated":{"line":1,"column":43}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":3,"column":45},"generated":{"line":1,"column":56}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"value","original":{"line":4,"column":2},"generated":{"line":1,"column":57}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":4,"column":9},"generated":{"line":1,"column":64}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"exports","original":{"line":6,"column":0},"generated":{"line":1,"column":68}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"default","original":{"line":6,"column":8},"generated":{"line":1,"column":76}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":6,"column":18},"generated":{"line":1,"column":89}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":8,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":8,"column":4},"generated":{"line":1,"column":95}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"require","original":{"line":8,"column":17},"generated":{"line":1,"column":97}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":8,"column":25},"generated":{"line":1,"column":105}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_default","original":{"line":10,"column":4},"generated":{"line":1,"column":132}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"toExpression","original":{"line":10,"column":15},"generated":{"line":1,"column":134}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":13,"column":0},"generated":{"line":1,"column":136}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"toExpression","original":{"line":13,"column":9},"generated":{"line":1,"column":145}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":13,"column":22},"generated":{"line":1,"column":147}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":18,"column":6},"generated":{"line":1,"column":150}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":14,"column":6},"generated":{"line":1,"column":154}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":14,"column":10},"generated":{"line":1,"column":156}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"isExpressionStatement","original":{"line":14,"column":21},"generated":{"line":1,"column":158}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":14,"column":44},"generated":{"line":1,"column":181}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":15,"column":4},"generated":{"line":1,"column":186}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":15,"column":11},"generated":{"line":1,"column":188}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"expression","original":{"line":15,"column":16},"generated":{"line":1,"column":190}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":18,"column":6},"generated":{"line":1,"column":203}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":18,"column":10},"generated":{"line":1,"column":205}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"isExpression","original":{"line":18,"column":21},"generated":{"line":1,"column":207}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":18,"column":35},"generated":{"line":1,"column":221}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":19,"column":11},"generated":{"line":1,"column":224}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":19,"column":11},"generated":{"line":1,"column":231}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":28,"column":6},"generated":{"line":1,"column":233}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":22,"column":6},"generated":{"line":1,"column":237}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":22,"column":10},"generated":{"line":1,"column":239}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"isClass","original":{"line":22,"column":21},"generated":{"line":1,"column":241}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":22,"column":30},"generated":{"line":1,"column":250}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":23,"column":4},"generated":{"line":1,"column":253}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"type","original":{"line":23,"column":9},"generated":{"line":1,"column":255}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":23,"column":16},"generated":{"line":1,"column":260}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":24,"column":13},"generated":{"line":1,"column":279}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":24,"column":17},"generated":{"line":1,"column":281}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"isFunction","original":{"line":24,"column":28},"generated":{"line":1,"column":283}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":24,"column":40},"generated":{"line":1,"column":295}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":25,"column":4},"generated":{"line":1,"column":300}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"type","original":{"line":25,"column":9},"generated":{"line":1,"column":302}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":25,"column":16},"generated":{"line":1,"column":307}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":28,"column":7},"generated":{"line":1,"column":331}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_generated","original":{"line":28,"column":11},"generated":{"line":1,"column":333}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"isExpression","original":{"line":28,"column":22},"generated":{"line":1,"column":335}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":28,"column":36},"generated":{"line":1,"column":349}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":29,"column":10},"generated":{"line":1,"column":352}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":29,"column":10},"generated":{"line":1,"column":358}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"Error","original":{"line":29,"column":14},"generated":{"line":1,"column":362}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":29,"column":35},"generated":{"line":1,"column":368}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":29,"column":35},"generated":{"line":1,"column":383}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":29,"column":35},"generated":{"line":1,"column":390}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"type","original":{"line":29,"column":40},"generated":{"line":1,"column":392}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","original":{"line":29,"column":4},"generated":{"line":1,"column":397}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":32,"column":9},"generated":{"line":1,"column":419}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"node","original":{"line":32,"column":9},"generated":{"line":1,"column":426}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"exports","original":{"line":11,"column":0},"generated":{"line":1,"column":428}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"default","original":{"line":11,"column":8},"generated":{"line":1,"column":436}},{"source":"../../node_modules/@babel/types/lib/converters/toExpression.js","name":"_default","original":{"line":11,"column":18},"generated":{"line":1,"column":444}}],"sources":{"../../node_modules/@babel/types/lib/converters/toExpression.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _default = toExpression;\nexports.default = _default;\n\nfunction toExpression(node) {\n  if ((0, _generated.isExpressionStatement)(node)) {\n    node = node.expression;\n  }\n\n  if ((0, _generated.isExpression)(node)) {\n    return node;\n  }\n\n  if ((0, _generated.isClass)(node)) {\n    node.type = \"ClassExpression\";\n  } else if ((0, _generated.isFunction)(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!(0, _generated.isExpression)(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}"},"lineCount":null}},"error":null,"hash":"a0fcb29e60c2feb03943d39483696925","cacheData":{"env":{}}}